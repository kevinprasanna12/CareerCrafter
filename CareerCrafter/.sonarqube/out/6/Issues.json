{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.14.0.0",
        "fileVersion": "4.14.0-3.25218.8 (d7bde97e)",
        "semanticVersion": "4.14.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Career%20Crafter/CareerCrafter/CareerCrafterAPI.Tests/Conntrollers/EmployeeControllerTests.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 73,
                  "endLine": 41,
                  "endColumn": 94
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Career%20Crafter/CareerCrafter/CareerCrafterAPI.Tests/Conntrollers/JobListingControllerTests.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 65,
                  "endLine": 58,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Career%20Crafter/CareerCrafter/CareerCrafterAPI.Tests/Conntrollers/EmployeeControllerTests.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 77,
                  "endLine": 77,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Career%20Crafter/CareerCrafter/CareerCrafterAPI.Tests/Conntrollers/EmployeeControllerTests.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 14,
                  "endLine": 11,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1050",
          "level": "note",
          "message": "Declare types in namespaces",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Career%20Crafter/CareerCrafter/CareerCrafterAPI.Tests/Conntrollers/JobListingControllerTests.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 14,
                  "endLine": 12,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2699",
          "level": "warning",
          "message": "Add at least one assertion to this test case.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Career%20Crafter/CareerCrafter/CareerCrafterAPI.Tests/UnitTest1.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 21,
                  "endLine": 6,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "xUnit2032",
          "level": "note",
          "message": "The naming of Assert.IsAssignableFrom can be confusing. An overload of Assert.IsType is available with an exact match flag which can be set to false to perform the same operation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Career%20Crafter/CareerCrafter/CareerCrafterAPI.Tests/Conntrollers/JobListingControllerTests.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 28,
                  "endLine": 35,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1050": {
          "id": "CA1050",
          "shortDescription": "Declare types in namespaces",
          "fullDescription": "Types are declared in namespaces to prevent name collisions and as a way to organize related types in an object hierarchy.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S2699": {
          "id": "S2699",
          "shortDescription": "Tests should include assertions",
          "fullDescription": "The rule targets test methods that lack an assertion and consist solely of an action and, optionally, a setup.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2699",
          "properties": {
            "category": "Blocker Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "xUnit2032": {
          "id": "xUnit2032",
          "shortDescription": "Type assertions based on 'assignable from' are confusingly named",
          "defaultLevel": "note",
          "helpUri": "https://xunit.net/xunit.analyzers/rules/xUnit2032",
          "properties": {
            "category": "Assertions",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}